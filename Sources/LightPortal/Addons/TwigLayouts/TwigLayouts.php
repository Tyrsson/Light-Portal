<?php

/**
 * TwigLayouts.php
 *
 * @package BladeOneLayouts (Light Portal)
 * @link https://custom.simplemachines.org/index.php?mod=4244
 * @author Bugo <bugo@dragomano.ru>
 * @copyright 2023 Bugo
 * @license https://opensource.org/licenses/MIT MIT
 *
 * @category addon
 * @version 20.05.23
 */

namespace Bugo\LightPortal\Addons\TwigLayouts;

use Bugo\LightPortal\Addons\Plugin;
use Twig\Extension\DebugExtension;
use Twig\Loader\FilesystemLoader;
use Twig\Environment;
use Twig\Error\Error;
use Twig\TwigFunction;

if (! defined('LP_NAME'))
	die('No direct access...');

/**
 * Generated by PluginMaker
 */
class TwigLayouts extends Plugin
{
	public string $type = 'frontpage';

	public function addSettings(array &$config_vars): void
	{
		$this->addDefaultValues([
			'template' => 'example',
		]);

		$config_vars['twig_layouts'][] = [
			'select', 'template', $this->getLayouts(),
			'subtext' => sprintf(
				$this->txt['lp_twig_layouts']['template_subtext'],
				'.twig',
				$this->settings['default_theme_dir'] . '/custom_frontpage_layouts'
			)
		];
	}

	public function frontCustomTemplate(): void
	{
		require_once __DIR__ . '/vendor/autoload.php';

		$params = [
			'txt'         => $this->txt,
			'context'     => $this->context,
			'modSettings' => $this->modSettings,
		];

		ob_start();

		try {
			$loader = new FilesystemLoader(__DIR__ . '/layouts/');
			$loader->addPath($this->settings['default_theme_dir'] . '/custom_frontpage_layouts');
			$twig = new Environment($loader, ['cache' => $this->cachedir, 'debug' => false]);
			$twig->addExtension(new DebugExtension());
			$show_pagination_function = new TwigFunction('show_pagination', function (string $position = 'top') {
				show_pagination($position);
			});
			$twig->addFunction($show_pagination_function);
			$debug_function = new TwigFunction('debug', function (array $data) {
				echo parse_bbc('[code]' . print_r($data, true) . '[/code]');
			});
			$twig->addFunction($debug_function);
			echo $twig->render($this->context['lp_twig_layouts_plugin']['template'] . '.twig', $params);
		} catch (Error $e) {
			$this->fatalError($e->getMessage());
		}

		$this->context['lp_layout'] = ob_get_clean();

		$this->modSettings['lp_frontpage_layout'] = '';
	}

	public function credits(array &$links): void
	{
		$links[] = [
			'title' => 'Twig',
			'link' => 'https://github.com/twigphp/Twig',
			'author' => 'Twig Team',
			'license' => [
				'name' => 'the BSD-3-Clause',
				'link' => 'https://github.com/twigphp/Twig/blob/3.x/LICENSE'
			]
		];
	}

	private function getLayouts(): array
	{
		$layouts = glob(__DIR__ . '/layouts/*.twig');
		$customs = glob($this->settings['default_theme_dir'] . '/custom_frontpage_layouts/*.twig');
		$layouts = array_merge($layouts, $customs);

		$results = [];
		foreach ($layouts as $layout) {
			$item = str_replace('.twig', '', basename($layout));
			$results[$item] = ucfirst($item);
		}

		return $results;
	}
}
